{"version":3,"sources":["pdfs.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["pdfs","filePath","sourceUrl","App","viewerDiv","useRef","useEffect","WebViewer","path","initialDoc","accessibleMode","enableAnnotations","enableMeasurement","enableRedaction","isAdminUser","isReadOnly","current","then","instance","setToolMode","disableTools","className","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAWeA,EANa,CAC1B,CAAEC,SAAU,mDAAoDC,UAAW,2D,eC4B9DC,MA7Bf,WACE,IAAMC,EAAYC,iBAAuB,MAqBzC,OAnBAC,qBAAU,WAIRC,IAAU,CACRC,KAAM,MACNC,WAAW,QAAD,OAAUT,EAAK,GAAGC,UAC5BS,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,iBAAiB,EACjBC,aAAa,EACbC,YAAY,GACXX,EAAUY,SAA2BC,MAAK,SAACC,GAC5CA,EAASC,YAAY,OACrBD,EAASE,aAAa,CAAC,wBAExB,IAGD,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAYC,IAAKlB,OCfvBmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.056940b5.chunk.js","sourcesContent":["interface PdfMetadata {\n  filePath: string,\n  sourceUrl: string,\n}\n\nconst pdfs: PdfMetadata[] = [\n  { filePath: 'QAW_Download_Library_Jan26_2021/gayliberator.pdf', sourceUrl: 'https://queer.archive.work/library/download/index.html' }\n]\n\n\n\nexport default pdfs","import React, { useRef, useEffect } from 'react'\nimport WebViewer, { WebViewerInstance } from '@pdftron/webviewer'\nimport pdfs from './pdfs'\nimport './App.css'\n\nfunction App() {\n  const viewerDiv = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    /* Using PDFTron WebViewer for React\n    // Documentation: https://www.pdftron.com/documentation/web/get-started/react/\n    // Tutorial: https://www.youtube.com/watch?v=bVhWXuLSL0k  */\n    WebViewer({\n      path: 'lib',\n      initialDoc: `pdfs/${pdfs[0].filePath}`,\n      accessibleMode: true,\n      enableAnnotations: false,\n      enableMeasurement: false,\n      enableRedaction: false,\n      isAdminUser: false,\n      isReadOnly: true,\n    }, viewerDiv.current as HTMLDivElement).then((instance: WebViewerInstance) => {\n      instance.setToolMode('Pan')\n      instance.disableTools(['AnnotationEdit'])\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className='webviewer' ref={viewerDiv} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}